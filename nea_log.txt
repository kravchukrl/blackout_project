NEA CS log

13/05/2025

Laid out an idea of what NEA is actually going to do and comprise of

Suggestion from teacher:
Start in June, At least set up the Raspberry to start collecting data, and connect it to a database
It's best if by Christmas i would have 6 moths worth of Data, to use as example, to fullly test functionality and display capabilities of the project.

https://raspberrypi.stackexchange.com/questions/13538/raspberry-pi-to-email-when-power-outage-occurs

link to an example of how it can be set up


16/05/2025

I started looking into `smtplib`. It's a python library that can be used to send email using the SMTP protocol, through python script. I am considering using it as a way for Raspberry Pi to communicate with the server, and send email every time period, if the power is absent. Since python scripts can be easily run using a bash script, this would be a good way of communicating, but I also could look into other ways of communicating, maybe directly with a database, which will host data bout power outages.


dd/mm/yyyy

I have been looking into a way of making RPi be able to respond to absence of electricity in a socket. This could be done by using a USB-ending wire, and connecting it a GPIO pins on the Raspberry Pi. Naturally, this would imply using an external piece of circuitry, due to sockets having significantly higher voltage, than that RPi can handle. This piece would act as a switch, opening where no current flows through it from the connected USB cable, and closing when there is. In this scenario, it could be wired to GPIO pins, where one would supply voltage, and one would act as an input pin, reading if the voltage is detected. 

For this, I could potentially use a relay unit, as it fits all the functionality described earlier. Since we are operating with relatively low voltages, there would be no fear about using circuitry in the open. As such, I'm going to procure the needed parts to try and facilitate this setup. So far it is:
RPi (Which I already have, 4B 8 GB version to be exact)
Relay module > 5A 
M-F GPIO cables
USB cable with open ends

dd/mm/yyyy

After acquiring the above-mentioned parts, I have assembled the theorised construction.
One interesting obstacle was the fact that relay module has a separate input connection for logic switch, i.e. in addition to DC+, DC- inputs, logical outputs and COM, it also has an input that would control when it has to switch independent of if it is powered or not. To solve this, I have put a wire going from DC+ to this input, meaning that if the power is present, it is going to be automatically turned on, and when power will be out, it would be closed.

I have tested turning it on, as evidenced by the video, and it appears to work, without burning my house down. Great Success/


dd/mm/yyyy

I have started working on basic code which would control the logic of RPi, and indicate whether the power is present or not. I am currently working with this script in python, but I will asses if it would make sense to run this part of the logic as a BASH script, as this could later on make it easier to automatically run it, even if Pi was turned on, i.e. make it run on boot.
I have worked out how to run the GPIO library in Python, as well as understanding the use of the pull-down and pull-up resistors. I have been able to produce a simple program, which updates every second, displaying in the console if the power is present or if it is absent. As evidenced by the video recording - it works, and the next step would be working out how to set up a database, where the data will be logged to.

01/08/2025

Setting up workspace with version control and RPi connected through SSH to my personal laptop